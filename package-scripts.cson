  'cson2json': '
    sed -E "s/#ECMASCRIPT#/es5/g" package-scripts-build.cson > tmp-build.cson &&
    sed -E "s/#ECMASCRIPT#/es6-es2015/g" package-scripts-build.cson >> tmp-build.cson &&
    sed -E "s/#ECMASCRIPT#/es7-es2016/g" package-scripts-build.cson >> tmp-build.cson &&
    sed -E "s/#ECMASCRIPT#/es8-es2017/g" package-scripts-build.cson >> tmp-build.cson &&
    json -I -f package.json -e "this.scripts=$(cat package-scripts.cson tmp-build.cson | node node_modules/cson/bin/cson2json)" &&
    rimraf tmp-*.cson
  '

  'electron-renderer:all': '
    cpy "./ReadiumCSS/**/*.*" ../dist/ --cwd=./misc --parents &&
    rimraf "./dist/ReadiumCSS/*.css"
  '

  '_pregitdist': '
    npm run build:all
  '

  'gitdist': '
    cd ../r2-navigator-js-dist/ &&
    git checkout -B feature/https &&
    (git pull || echo "pull") &&
    (git status || echo status) &&
    ((rimraf "*" && echo rimrafOK) || echo rimrafNOK) &&
    cpy ../r2-navigator-js/package.json . &&
    cpy ../r2-navigator-js/package-lock.json . &&
    cpy ../r2-navigator-js/LICENSE . &&
    cpy ../r2-navigator-js/README.md . &&
    cpy "docs/**/*.*" ../r2-navigator-js-dist/ --cwd=../r2-navigator-js/ --parents &&
    cpy "dist/**/*.*" ../r2-navigator-js-dist/ --cwd=../r2-navigator-js/ --parents &&
    (git add * || echo add) &&
    (git commit -a -m "add new dist" || echo commit) &&
    (git push --set-upstream origin feature/https || echo push) &&
    (git status || echo status) &&
    cd ../r2-navigator-js
  '

  'prepare_': '
    npm run build:all &&
    npm test
  '

  'prepublish_': '
    npm run prepare_
  '

  'typescript:imports': '
    node tools/typescript_relativize_path_mapping_imports.js
  '

  'gitrev': '
    node tools/gitrev.js &&
    cat dist/gitrev.json
  '

  'afterdist': '
    npm run typescript:imports &&
    npm run gitrev
  '

  'prebuild': '
    npm run lint
  '

  'build': '
    npm run transpile:typescript
  '

  'postbuild': '
    npm run afterdist &&
    npm run electron-renderer:es8-es2017
  '

  'prebuild:all': '
    npm run lint
  '

  'build:all': '
    npm run transpile:typescript:all
  '

  'postbuild:all': '
    npm run afterdist &&
    npm run electron-renderer:all
  '

  'clean': '
    rimraf ./dist &&
    mkdirp ./dist
  '

  'lint': '
    npm run lint:all &&
    npm run lint:typescript:full
  '

  'lint:all': '
    eclint
      check
      "**/*"
      "!**/*.node"
      "!.git/**/*"
      "!node_modules*/**/*"
      "!dist/**/*"
      "!misc/**/*"
      "!.vscode/**/*"
      "!.history/**/*"
      "!**/.DS_Store"
      "!**/*.epub"
      "!**/*.cbz"
      "!**/*.jpg"
      "!**/*.jpeg"
      "!**/*.png"
      "!**/*.log"
  '

  'lint:typescript': '
    tslint
      -c
      "./tslint.json"
      "./src/**/*.ts"
      "./test/**/*.ts"
  '

  'lint:typescript:full': '
    tslint
      --project
      "./tsconfig.json"
      -c
      "./tslint.json"
      "./src/**/*.ts"
      "./test/**/*.ts"
  '

  'lintfix': '
    sed
      -i
      ""
      "s/let normalizedPath = path\\.normalize(documentPath);/let normalizedPath = path.normalize(documentPath).toLowerCase();/g"
      ./node_modules/tslint-language-service/out/src/index.js
  '

  'pretranspile:typescript': '
    npm run clean
  '

  'transpile:typescript': '
    tsc -p "./tsconfig.json"
  '

  'pretranspile:typescript:all': '
    npm run clean
  '

  'transpile:typescript:all': '
    npm run transpile:typescript:es5 &&
    npm run transpile:typescript:es6-es2015 &&
    npm run transpile:typescript:es7-es2016 &&
    npm run transpile:typescript:es8-es2017
  '

  'transpile:typescript:es8-es2017+afterdist': '
    npm run transpile:typescript:es8-es2017 &&
    npm run afterdist &&
    npm run electron-renderer:es8-es2017
  '

  'transpile:typescript:single': '
    node tools/typescript_compile_single.js
  '

  'posttranspile:typescript:single': '
    npm run afterdist &&
    npm run electron-renderer:es8-es2017
  '
